===========================
How to use 0-add_integer.py
===========================

This module defines a function ``add_integer(a, b=98)``

Usage
=====

``add_integer(...)`` returns the sum of its arguments. 
It is equivalent to the `+` operator for the number type

::

    >>> add_integer = __import__('0-add_integer').add_integer
    >>> add_integer(3, 5)
    8

::

The function also works for floating point numbers

::

    >>> add_integer(11.0, 9.0)
    20

::

Floats are cast into integers before the addition operation

::

    >>> add_integer(11.5, -8.9)
    3

::

Floats and integers can also be combined

::

    >>> add_integer(11.2, 8)
    19

::

The second argument is optional

::

    >>> add_integer(12)
    110

::

Non numbers
===========

``add_integer()`` expects that both inputs are either integers or Floats.
If an input is not an integer or a float, a TypeError is raised

::

    >>> add_integer("Jolly Roger", 8.8)
    Traceback (most recent call last):
    TypeError: a must be an integer

::

    >>> add_integer(89, "Captain Hook")
    Traceback (most recent call last):
    TypeError: b must be an integer

::

    >>> add_integer(None)
    Traceback (most recent call last):
    TypeError: a must be an integer

::

    >>> add_integer(12, None)
    Traceback (most recent call last):
    TypeError: b must be an integer

::

If both arguments are not integers or floats, a TypeError is raised
for the first argument

::

    >>> add_integer("Jolly Roger", "Captain Hook")
    Traceback (most recent call last):
    TypeError: a must be an integer

::

The function will fail if infinity is provided

::

    >>> add_integer(float('inf'))
    Traceback (most recent call last):
    OverflowError: cannot convert float infinity to integer

::

    >>> add_integer(11, float('inf'))
    Traceback (most recent call last):
    OverflowError: cannot convert float infinity to integer

::

The function will also fail if NaN is provided

::

    >>> add_integer(float('nan'))
    Traceback (most recent call last):
    ValueError: cannot convert float NaN to integer

::

    >>> add_integer(11, float('nan'))
    Traceback (most recent call last):
    ValueError: cannot convert float NaN to integer