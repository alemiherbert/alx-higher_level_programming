==============================
doctests for matrix_divided.py
==============================

``matrix_divided()`` returns a new matrix with all the elements matrix_divided

SUCCESS TESTS
=============

testing functions with scalar division by single digit divisor
::

    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided
    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3)
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

the quotients are rounded to a maximum of two decimal places
::

    >>> matrix_divided([[1, 2, 4], [2, 5, 6]], 2)
    [[0.5, 1.0, 2.0], [1.0, 2.5, 3.0]]

the original matrix remains the same
::

    >>> matrix = [[13, 26, 52], [65, 78, 91]]
    >>> matrix_divided(matrix, 13)
    [[1.0, 2.0, 4.0], [5.0, 6.0, 7.0]]

floating point numbers are handled alike
::

    >>> matrix = [[1.3, 2.6, 5.2], [6.5, 7.8, 9.1]]
    >>> matrix_divided(matrix, 13)
    [[0.1, 0.2, 0.4], [0.5, 0.6, 0.7]]

floating point numbers and integers can be mixed
::

    >>> matrix = [[1.3, 26, 5.2], [6.5, 78, 9.1]]
    >>> matrix_divided(matrix, 13)
    [[0.1, 2.0, 0.4], [0.5, 6.0, 0.7]]

Accept an empty list of lists
::

    >>> matrix_divided([[]], 13)
    [[]]

FAILURE TESTS
=============

Reject non-list items or empty lists
::

    >>> matrix_divided("hello", 13)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

::

    >>> matrix_divided(None, 13)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

::

    >>> matrix_divided([], 13)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Reject a list that doesn't contain lists
::

    >>> matrix_divided([1, 3, 4], 13)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Reject a list of lists if any element in the lists is not an integer/float
::

    >>> matrix_divided([[1, 3, 4], [8, 5, "hi"]], 13)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Reject a matrix whose rows are of different sizes
::

    >>> matrix_divided([[1, 2], [1, 2, 4]], 13)
    Traceback (most recent call last):
    TypeError: Each row of the matrix must have the same size

Reject a divisor that is not an integer/float
::

    >>> matrix_divided([[1, 2], [2, 4]], "ask")
    Traceback (most recent call last):
    TypeError: div must be a number

Reject a divisor that is zero
::

    >>> matrix_divided([[1, 2], [2, 4]], 0)
    Traceback (most recent call last):
    ZeroDivisionError: division by zero